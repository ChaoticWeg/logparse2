{"version":3,"sources":["components/AddButton.js","theme/Theme.js","components/TopBar.js","screens/Screen.js","components/BasicInfoScreen/FileHash.js","components/TableCard.js","components/BasicInfoScreen/ListCard.js","components/BasicInfoScreen/Seed.js","data/BasicInfoScreenTableKeys.js","screens/BasicInfoScreen.js","navigation/Tabs.js","components/LeftLockedDrawer.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","fileInput","display","fabWrapper","position","right","spacing","bottom","AddButton","props","React","useRef","classes","Portal","container","document","html","className","type","accept","id","ref","onChange","e","file","target","files","reader","FileReader","onerror","alert","onload","data","json","result","JSON","parse","err","name","fn","args","callPropFunction","readAsText","Tooltip","title","Fab","color","aria-label","onClick","current","click","Theme","createTheme","palette","success","main","error","primary","light","dark","contrastText","secondary","appBar","zIndex","drawer","leftIcon","marginLeft","TopBar","AppBar","Toolbar","Screen","this","log","children","Typography","variant","component","gutterBottom","style","textAlign","Children","map","c","isValidElement","cloneElement","Component","defaultProps","fileHashCard","justifyContent","padding","fileHashAvatar","margin","breakpoints","only","getHashImgUrl","encodeURIComponent","FileHash","hash","Card","i","Avatar","alt","src","header","alignItems","headerTitle","flex","headerArrow","transition","transitions","create","duration","short","rotate","transform","cardContent","InfoCard","tables","startOpen","useState","open","setOpen","iconClass","useMemo","clsx","CardContent","Collapse","in","Grid","rows","item","xs","md","lg","xl","Table","size","TableBody","key","value","TableRow","TableCell","scope","align","marginBottom","chip","alignSelf","headerArrowWrapper","ListCard","values","Chip","label","_","List","dense","disablePadding","v","ListItem","ListItemText","card","Seed","seed","rightIcon","onRightIconClick","IconWrapper","IconButton","Fragment","KeyTranslations","MainRulesOpenKeys","MainRulesWorldKeys","MainRulesShuffleKeys","MainRulesShuffleDungeonItemsKeys","keyToPrintable","chain","split","w","substring","toLocaleUpperCase","join","Array","isArray","romInfoGrid","Alert","elevation","Tabs","icon","screen","setSuccess","setError","buildRowsFromKeys","keys","k","settings","reject","r","isEmpty","file_hash","version","onSeedCopySuccess","onSeedCopyError","mainRulesTables","navigator","clipboard","writeText","then","Promise","catch","disabled_locations","allowed_tricks","t","replace","Snackbar","autoHideDuration","onClose","severity","getDrawerWidth","down","up","width","flexShrink","drawerPaper","drawerContainer","overflow","LeftLockedDrawer","activeKey","seedUrl","onListItemSelected","Drawer","paper","button","selected","ListItemIcon","window","focus","root","content","height","flexGrow","App","setLog","first","tabKey","setTabKey","ScreenComponent","tab","findWhere","ThemeProvider","CssBaseline","onTabSelected","onFileSelected","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44fc4e4f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab, Portal, Tooltip } from \"@material-ui/core\";\n\nimport PublishIcon from '@material-ui/icons/Publish';\n\nconst useStyles = makeStyles((theme) => ({\n    fileInput: {\n        display: \"none\"\n    },\n    fabWrapper: {\n        position: \"absolute\",\n        right: theme.spacing(6),\n        bottom: theme.spacing(6)\n    }\n}));\n\nexport default function AddButton(props) {\n\n    const fileInput = React.useRef(null);\n    const classes = useStyles();\n\n    function callPropFunction(name, ...args) {\n        const fn = props[name];\n        if (typeof fn === \"function\") {\n            return fn(...args);\n        }\n    }\n\n    function onFileSelected(e) {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onerror = () => alert(\"Error reading file\");\n\n        reader.onload = (e) => {\n            const json = e.target.result;\n            let data;\n\n            try {\n                data = JSON.parse(json);\n            } catch (err) {\n                alert(\"Could not read file. Is it a properly formatted JSON file?\");\n                return;\n            }\n\n            callPropFunction(\"onFileSelected\", data);\n        };\n\n        reader.readAsText(file, \"utf-8\");\n    }\n\n    function onClick() {\n        fileInput.current?.click();\n    }\n\n    return (\n        <Portal container={document.html}>\n            <div className={classes.fabWrapper}>\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    id=\"upload-file\"\n                    ref={fileInput}\n                    className={classes.fileInput}\n                    onChange={onFileSelected}\n                />\n                <Tooltip title=\"Upload Log\">\n                    <Fab color=\"secondary\" aria-label=\"add\" onClick={onClick}>\n                        <PublishIcon />\n                    </Fab>\n                </Tooltip>\n            </div>\n        </Portal>\n    );\n\n}","import {createTheme} from \"@material-ui/core/styles\";\n\nconst Theme = createTheme({\n    palette: {\n        type: \"dark\",\n        success: {main: \"#38786a\"},\n        error: {main: \"#ab000d\"},\n        primary: {\n            main: \"#004c3f\",\n            light: \"#38786a\",\n            dark: \"#002419\",\n            contrastText: \"#fafafa\"\n        },\n        secondary: {\n            main: \"#37474f\",\n            light: \"#62727b\",\n            dark: \"#102027\",\n            contrastText: \"#fafafa\"\n        }\n    }\n});\n\nexport default Theme;","import { AppBar, Toolbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\n\nimport VideogameAssetIcon from '@material-ui/icons/VideogameAsset';\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1\n    },\n    leftIcon: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nexport default function TopBar(props) {\n    const classes = useStyles();\n    return (\n        <AppBar className={classes.appBar}>\n            <Toolbar>\n                <VideogameAssetIcon className={classes.leftIcon} />\n                <ListAltOutlinedIcon className={classes.leftIcon} />\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from \"react\";\n\nimport { Typography } from \"@material-ui/core\";\n\nexport default class Screen extends React.Component {\n\n    static defaultProps = {\n        title: \"Screen\"\n    };\n\n    render() {\n        const { log, children } = this.props;\n\n        return (\n            <div>\n                {\n                    !log && (\n                        <>\n                            <Typography variant=\"h4\" component=\"h4\" gutterBottom style={{textAlign: \"center\"}}>\n                                No spoiler log selected\n                            </Typography>\n                            <Typography variant=\"body1\" component=\"p\" style={{textAlign: \"center\"}}>\n                                Use the upload button to select a spoiler log\n                            </Typography>\n                        </>\n                    )\n                }\n                {\n                    log && (\n                        React.Children.map(children, (c) => React.isValidElement(c) && React.cloneElement(c))\n                    )\n                }\n            </div>\n        );\n    }\n\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Card } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    fileHashCard: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2)\n    },\n    fileHashAvatar: {\n        margin: `0 ${theme.spacing(1)}px`,\n        [theme.breakpoints.only(\"md\")]: {\n            margin: 0\n        }\n    }\n}));\n\nfunction getHashImgUrl(name) {\n    name = encodeURIComponent(name);\n    return `https://ootrandomizer.com/img/hash/${name}.png`;\n}\n\nexport default function FileHash(props) {\n    const classes = useStyles();\n    const { hash } = props;\n    return (\n        <Card className={classes.fileHashCard}>\n            {\n                hash.map((name, i) => (\n                    <Avatar\n                        className={classes.fileHashAvatar}\n                        alt={name}\n                        src={getHashImgUrl(name)}\n                        key={i}\n                    />\n                ))\n            }\n        </Card>\n    );\n}","import React from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, Collapse, Grid, Table, TableBody, TableCell, TableRow, Typography } from \"@material-ui/core\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        padding: theme.spacing(2),\n        margin: 0,\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    headerTitle: {\n        flex: 1\n    },\n    headerArrow: {\n        flex: 0,\n        transition: theme.transitions.create([\"transform\", \"opacity\"], {\n            duration: theme.transitions.duration.short\n        })\n    },\n    rotate: {\n        transform: \"rotate(180deg)\"\n    },\n    cardContent: {\n        padding: `0 ${theme.spacing(2)}px`,\n        margin: 0\n    }\n}));\n\nexport default function InfoCard(props) {\n    const { title, tables, startOpen = false } = props;\n\n    const [open, setOpen] = React.useState(startOpen);\n    const classes = useStyles();\n\n    const iconClass = React.useMemo(() => (\n        clsx(classes.headerArrow, {\n            [classes.rotate]: open\n        })\n    ), [open, classes.headerArrow, classes.rotate]);\n\n    return (\n        <Card>\n            <div className={classes.header} onClick={() => setOpen(!open)}>\n                <Typography className={classes.headerTitle} variant=\"h5\" component=\"h2\" gutterBottom>{title}</Typography>\n                <div className={classes.headerArrow}>\n                    <ExpandMoreIcon className={iconClass} />\n                </div>\n            </div>\n            <CardContent className={classes.cardContent}>\n                <Collapse in={open}>\n                    <Grid container spacing={3}>\n                        {\n                            tables.map(({ name, rows }) => (\n                                <Grid item xs={12} md={6} lg={4} xl={3}>\n                                    <Typography variant=\"h6\" component=\"h3\" gutterBottom>{name}</Typography>\n                                    <Table size=\"small\">\n                                        <TableBody>\n                                            {\n                                                rows.map(([key, { name, value }]) => (\n                                                    <TableRow key={key}>\n                                                        <TableCell component=\"th\" scope=\"row\">{name}</TableCell>\n                                                        <TableCell align=\"right\">{value}</TableCell>\n                                                    </TableRow>\n                                                ))\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n                            ))\n                        }\n                    </Grid>\n                </Collapse>\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport _ from \"underscore\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, Chip, Collapse, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: theme.spacing(1)\n    },\n    title: {\n        flex: 1\n    },\n    chip: {\n        flex: 0,\n        alignSelf: \"flex-start\"\n    },\n    headerArrowWrapper: {\n        flex: 0,\n        marginLeft: theme.spacing(1)\n    },\n    headerArrow: {\n        transition: theme.transitions.create([\"transform\", \"opacity\"], {\n            duration: theme.transitions.duration.short\n        })\n    },\n    rotate: {\n        transform: \"rotate(180deg)\"\n    },\n}));\n\nexport default function ListCard(props) {\n    const { title, values, startOpen = false } = props;\n\n    const [open, setOpen] = React.useState(startOpen);\n    const classes = useStyles();\n\n    const iconClass = React.useMemo(() => (\n        clsx(classes.headerArrow, {\n            [classes.rotate]: open\n        })\n    ), [open, classes.headerArrow, classes.rotate]);\n\n    return (\n        <Card>\n            <CardContent>\n                <div className={classes.header} onClick={() => setOpen(!open)}>\n                    <Typography className={classes.title} variant=\"h5\" component=\"h2\" gutterBottom>{title}</Typography>\n                    <Chip className={classes.chip} label={_.size(values)} />\n                    <div className={classes.headerArrowWrapper}>\n                        <ExpandMoreIcon className={iconClass} />\n                    </div>\n                </div>\n                <Collapse in={open}>\n                    <List dense disablePadding>\n                        {\n                            _.map(values, (v) => (\n                                <ListItem dense disablePadding>\n                                    <ListItemText primary={v} />\n                                </ListItem>\n                            ))\n                        }\n                    </List>\n                </Collapse>\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, IconButton, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        display: \"flex\",\n        padding: `${theme.spacing(1)}px ${theme.spacing(3)}px`\n    }\n}));\n\nexport default function Seed(props) {\n    const {\n        title = \"Seed\",\n        seed,\n        rightIcon,\n        onRightIconClick\n    } = props;\n\n    const classes = useStyles();\n\n    const IconWrapper = (typeof onRightIconClick === \"function\") ? IconButton : React.Fragment;\n\n    return (\n        <Card className={classes.card}>\n            <div style={{ flex: 1 }}>\n                <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">{title}</Typography>\n                <Typography variant=\"h6\" component=\"h3\">{seed}</Typography>\n            </div>\n            {\n                rightIcon && (\n                    <div style={{ flex: 0, alignSelf: \"center\" }}>\n                        <IconWrapper onClick={onRightIconClick}>\n                            {rightIcon}\n                        </IconWrapper>\n                    </div>\n                )\n            }\n        </Card>\n    );\n}","export const KeyTranslations = {\n    \"all_reachable\": \"all_locations_reachable\",\n    \"logic_no_night_tokens_without_suns_song\": \"night_tokens_expect_sun's_song\",\n    \"bridge\": \"rainbow_bridge_requirements\",\n    \"bridge_rewards\": \"bridge_rewards_required\",\n    \"trials_random\": \"random_ganon's_trials\",\n    \"trials\": \"ganon's_trials_count\",\n    \"owl_drops\": \"randomize_owl_drops\",\n    \"warp_songs\": \"randomize_warp_song_destinations\",\n    \"spawn_positions\": \"randomize_overworld_spawns\",\n    \"mq_dungeons_random\": \"random_mq_dungeon_count\",\n    \"mq_dungeons\": \"mq_dungeon_count\",\n    \"shuffle_song_items\": \"shuffle_songs\",\n    \"song\": \"locations\",\n    \"shuffle_scrubs\": \"scrub_shuffle\",\n    \"shuffle_beans\": \"shuffle_magic_beans\",\n    \"shuffle_medigoron_carpet_salesman\": \"shuffle_medigoron_&_carpet_salesman\",\n    \"shuffle_mapcompass\": \"maps_&_compasses\",\n    \"startwith\": \"start_with\",\n    \"shuffle_smallkeys\": \"small_keys\",\n    \"shuffle_fortresskeys\": \"fortress_keys\",\n    \"shuffle_bosskeys\": \"boss_keys\",\n    \"shuffle_ganon_bosskey\": \"ganon's_boss_key\",\n    \"enhance_map_compass\": \"maps_/_compasses_give_info\",\n    \"disabled_locations\": \"exclude_locations\"\n};\n\nexport const MainRulesOpenKeys = [\n    \"randomize_settings\",\n    \"logic_rules\",\n    \"all_reachable\",\n    \"logic_no_night_tokens_without_suns_song\",\n    \"open_forest\",\n    \"open_kakariko\",\n    \"open_door_of_time\",\n    \"zora_fountain\",\n    \"gerudo_fortress\",\n    \"bridge\",\n    \"bridge_rewards\",\n    \"trials_random\",\n    \"trials\"\n];\n\nexport const MainRulesWorldKeys = [\n    \"starting_age\",\n    \"shuffle_interior_entrances\",\n    \"shuffle_grotto_entrances\",\n    \"shuffle_dungeon_entrances\",\n    \"shuffle_overworld_entrances\",\n    \"owl_drops\",\n    \"warp_songs\",\n    \"spawn_positions\",\n    \"triforce_hunt\",\n    \"bombchus_in_logic\",\n    \"one_item_per_dungeon\",\n    \"mq_dungeons_random\",\n    \"mq_dungeons\"\n];\n\nexport const MainRulesShuffleKeys = [\n    \"shuffle_song_items\",\n    \"shopsanity\",\n    \"tokensanity\",\n    \"shuffle_scrubs\",\n    \"shuffle_cows\",\n    \"shuffle_kokiri_sword\",\n    \"shuffle_ocarinas\",\n    \"shuffle_weird_egg\",\n    \"shuffle_gerudo_card\",\n    \"shuffle_beans\",\n    \"shuffle_medigoron_carpet_salesman\"\n];\n\nexport const MainRulesShuffleDungeonItemsKeys = [\n    \"shuffle_mapcompass\",\n    \"shuffle_smallkeys\",\n    \"shuffle_fortresskeys\",\n    \"shuffle_bosskeys\",\n    \"shuffle_ganon_bosskey\",\n    \"enhance_map_compass\"\n];","import React from \"react\";\nimport _ from \"underscore\";\n\nimport { Grid, Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n\nimport Screen from \"./Screen\";\n\nimport FileHash from \"../components/BasicInfoScreen/FileHash\";\nimport TableCard from \"../components/TableCard\";\nimport ListCard from \"../components/BasicInfoScreen/ListCard\";\nimport Seed from \"../components/BasicInfoScreen/Seed\";\n\nimport {\n    KeyTranslations,\n    MainRulesOpenKeys,\n    MainRulesWorldKeys,\n    MainRulesShuffleKeys,\n    MainRulesShuffleDungeonItemsKeys\n} from \"../data/BasicInfoScreenTableKeys\";\n\nfunction keyToPrintable(value) {\n    if (typeof value === \"string\") {\n        value = KeyTranslations[value] || value;\n        return _.chain(value.split(\"_\")\n\n            // A little hacky but whatever\n            .map(w => w === \"mq\" ? \"MQ\" : w)\n            .map(w => w === \"lacs\" ? \"LACS\" : w)\n\n            .map(w => `${w.substring(0, 1).toLocaleUpperCase()}${w.substring(1)}`))\n            .join(\" \")\n            .value();\n    }\n\n    if (typeof value === \"boolean\") {\n        return value ? \"Yes\" : \"No\";\n    }\n\n    if (Array.isArray(value)) {\n        return value.join(\"\\n\");\n    }\n\n    if (typeof value === \"object\") {\n        return null;\n    }\n\n    return `${value}`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    romInfoGrid: {\n        marginBottom: theme.spacing(1)\n    }\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BasicInfoScreen(props) {\n    const { log } = props;\n\n    const [success, setSuccess] = React.useState(false);\n    const [error, setError] = React.useState(null);\n\n    const classes = useStyles();\n\n    if (!log) {\n        return <Screen log={log} />;\n    }\n\n    function buildRowsFromKeys(keys) {\n        return _.chain(keys)\n            .map(k => [k, { name: keyToPrintable(k), value: keyToPrintable(settings[k]) }])\n            .reject((r) => _.isEmpty(r[1].value))\n            .value();\n    }\n\n    let { file_hash, settings } = log;\n    let seed = log[\":seed\"];\n    let version = log[\":version\"]\n\n    function copySeedToClipboard() {\n        navigator.clipboard.writeText(seed)\n            .then(() => Promise.reject())\n            .then(onSeedCopySuccess)\n            .catch(onSeedCopyError);\n    }\n\n    function onSeedCopySuccess() {\n        setSuccess(true);\n    }\n\n    function onSeedCopyError() {\n        setError(true);\n    }\n\n    const mainRulesOpenRows = buildRowsFromKeys(MainRulesOpenKeys);\n    const mainRulesWorldRows = buildRowsFromKeys(MainRulesWorldKeys);\n    const mainRulesShuffleRows = buildRowsFromKeys(MainRulesShuffleKeys);\n    const mainRulesShuffleDungeonItemsRows = buildRowsFromKeys(MainRulesShuffleDungeonItemsKeys);\n\n    const mainRulesTables = [\n        { name: \"Open\", rows: mainRulesOpenRows },\n        { name: \"World\", rows: mainRulesWorldRows },\n        { name: \"Shuffle\", rows: mainRulesShuffleRows },\n        { name: \"Dungeon Items\", rows: mainRulesShuffleDungeonItemsRows }\n    ];\n\n    return (\n        <Screen title=\"Basic Info\" log={log}>\n            <Grid container className={classes.romInfoGrid} spacing={2} alignItems=\"stretch\">\n                <Grid item xs={12} md={4}>\n                    <FileHash hash={file_hash} />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Seed\n                        seed={seed}\n                        rightIcon={<FileCopyOutlinedIcon />}\n                        onRightIconClick={copySeedToClipboard}\n                    />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Seed title=\"Version\" seed={version} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TableCard\n                        startOpen\n                        title=\"Main Rules\"\n                        tables={mainRulesTables}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <ListCard\n                        title=\"Disabled Locations\"\n                        values={log.settings.disabled_locations}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <ListCard\n                        title=\"Allowed Tricks\"\n                        values={\n                            _.isEmpty(log.settings.allowed_tricks)\n                                ? [\"(none)\"]\n                                : _.chain(log.settings.allowed_tricks)\n                                    .map(t => t.replace(/^logic_/, \"\"))\n                                    .map(t => keyToPrintable(t))\n                                    .value()\n                        }\n                    />\n                </Grid>\n            </Grid>\n            <Snackbar open={success} autoHideDuration={4000} onClose={() => setSuccess(false)}>\n                <Alert severity=\"success\" onClose={() => setSuccess(false)}>\n                    Copied seed to clipboard\n                </Alert>\n            </Snackbar>\n            <Snackbar open={error} autoHideDuration={4000} onClose={() => setError(false)}>\n                <Alert severity=\"error\" onClose={() => setError(false)}>\n                    Error copying seed to clipboard. Is clipboard access allowed?\n                </Alert>\n            </Snackbar>\n        </Screen>\n    );\n}","import ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\n\nimport BasicInfoScreen from '../screens/BasicInfoScreen';\n\nconst Tabs = [\n    {\n        key: \"BasicInfo\",\n        name: \"Overview\",\n        icon: <ListAltOutlinedIcon/>,\n        screen: BasicInfoScreen\n    }\n];\n\nexport default Tabs;","import React from \"react\";\nimport _ from \"underscore\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Drawer, Toolbar, List, ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport Tabs from \"../navigation/Tabs\";\n\nconst getDrawerWidth = (theme) => ({\n    [theme.breakpoints.down(\"sm\")]: {\n        display: \"none\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n        width: \"20vw\"\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n        width: \"15vw\"\n    }\n});\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        ...getDrawerWidth(theme),\n        flexShrink: 0\n    },\n    drawerPaper: {\n        ...getDrawerWidth(theme)\n    },\n    drawerContainer: {\n        overflow: \"auto\"\n    }\n}));\n\nexport default function LeftLockedDrawer(props) {\n    const { activeKey, seedUrl } = props;\n\n    const classes = useStyles();\n\n    function callPropFunction(name, ...args) {\n        const fn = props[name];\n        if (typeof fn === \"function\") {\n            return fn(...args);\n        }\n    }\n\n    function onListItemSelected(key) {\n        callPropFunction(\"onTabSelected\", key);\n    }\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{ paper: classes.drawerPaper }}\n        >\n            <Toolbar />\n            <div className={classes.drawerContainer}>\n                <List>\n                    {\n                        _.map(Tabs, ({ key, name, icon }) => (\n                            <ListItem button key={key} onClick={() => onListItemSelected(key)} selected={activeKey === key}>\n                                {icon && (<ListItemIcon>{icon}</ListItemIcon>)}\n                                <ListItemText primary={name} />\n                            </ListItem>\n                        ))\n                    }\n                    {\n                        !_.isEmpty(seedUrl) && (\n                            <ListItem button onClick={() => window.open(seedUrl, \"_blank\").focus()}>\n                                <ListItemIcon><ExitToAppIcon/></ListItemIcon>\n                                <ListItemText primary=\"View on OOTR\" />\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </div>\n        </Drawer>\n    );\n\n}","import React from \"react\";\nimport _ from \"underscore\";\n\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline, Toolbar } from \"@material-ui/core\";\n\nimport AddButton from \"./components/AddButton\";\n\nimport Theme from \"./theme/Theme\";\nimport TopBar from \"./components/TopBar\";\nimport LeftLockedDrawer from \"./components/LeftLockedDrawer\";\n\nimport Tabs from \"./navigation/Tabs\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        height: \"100%\",\n        flexGrow: 1,\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px`\n    }\n}));\n\nfunction App() {\n\n    const [log, setLog] = React.useState(null);\n    const [tabKey, setTabKey] = React.useState(_.first(Tabs).key);\n\n    const ScreenComponent = React.useMemo(() => {\n        const tab = _.findWhere(Tabs, { key: tabKey });\n        return tab ? tab.screen : React.Fragment;\n    }, [tabKey]);\n\n    const classes = useStyles();\n\n    function onFileSelected(data) {\n        setLog(data);\n    }\n\n    return (\n        <div className={classes.root}>\n            <ThemeProvider theme={Theme}>\n                <CssBaseline />\n                <TopBar />\n                <LeftLockedDrawer activeKey={tabKey} onTabSelected={setTabKey} seedUrl={log ? log[\":seed_url\"] : null} />\n                <main className={classes.content}>\n                    <Toolbar />\n                    <ScreenComponent log={log} />\n                </main>\n                <AddButton onFileSelected={onFileSelected} />\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}